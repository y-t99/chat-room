plugins {
    id 'application'
    // 	Apply the Asciidoctor plugin.
    id "org.asciidoctor.jvm.convert" version "${asciidoctor_jvm_convert}"
    id 'io.spring.dependency-management'
    id 'org.springframework.boot'
}

configurations {
    // 	Declare the asciidoctorExt configuration for dependencies that extend Asciidoctor.
    asciidoctorExt
}

ext {
    // 	Configure a property to define the output location for generated snippets.
    set('snippetsDir', file("build/generated-snippets"))
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    // 	Add a dependency on spring-restdocs-asciidoctor in the asciidoctorExt configuration.
    // 	This will automatically configure the snippets attribute for use in your .
    // 	adoc files to point to build/generated-snippets.
    // 	It will also allow you to use the operation block macro.
    asciidoctorExt 'org.springframework.restdocs:spring-restdocs-asciidoctor'
    // 	Add a dependency on spring-restdocs-mockmvc in the testImplementation configuration.
    // 	If you want to use WebTestClient or REST Assured rather than MockMvc, add a dependency on spring-restdocs-webtestclient or spring-restdocs-restassured respectively instead.
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

application {
    mainClass = 'cn.chat.backend.server.ServerApplication'
}

test {
    // Configure the test task to add the snippets directory as an output.
    outputs.dir snippetsDir
    useJUnitPlatform()
}

// Configure the asciidoctor task.
asciidoctor {
    // Configure the snippets directory as an input.
    inputs.dir snippetsDir
    // Configure the use of the asciidoctorExt configuration for extensions.
    configurations 'asciidoctorExtensions'
    // Make the task depend on the test task so that the tests are run before the documentation is created.
    dependsOn test
}

// package the generated documentation in jar
bootJar {
    // Ensure that the documentation has been generated before the jar is built.
    dependsOn asciidoctor
    // Copy the generated documentation into the jarâ€™s static/docs directory.
    from ("${asciidoctor.outputDir}/html5") {
        into 'static/docs'
    }
}